name: 'Terraform GitHub Actions'
on:
  push:
    branches:
      - master

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 'Terraform Format'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.18
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: './staging/lambdas/tw-syncer'
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.18
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: './staging/lambdas/tw-syncer'
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.18
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: './staging/lambdas/tw-syncer'
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.18
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: './staging/lambdas/tw-syncer'
          tf_actions_comment: true
          args: '-var="consumer_api_key=${{ secrets.STAGING_CONSUMER_API_KEY }}"
                 -var="consumer_api_secret_key=${{ secrets.STAGING_CONSUMER_API_SECRET_KEY }}"
                 -var="access_token=${{ secrets.STAGING_ACCESS_TOKEN }}"
                 -var="access_secret=${{ secrets.STAGING_ACCESS_SECRET }}"
                 -var="s3_access_key_id=${{ secrets.STAGING_S3_ACCESS_KEY_ID }}"
                 -var="s3_secret_access_key=${{ secrets.STAGING_S3_SECRET_ACCESS_KEY }}"'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
#
      - name: 'Terraform Apply'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.18
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: './staging/lambdas/tw-syncer'
          tf_actions_comment: true
          args: '-var="consumer_api_key=${{ secrets.STAGING_CONSUMER_API_KEY }}"
                 -var="consumer_api_secret_key=${{ secrets.STAGING_CONSUMER_API_SECRET_KEY }}"
                 -var="access_token=${{ secrets.STAGING_ACCESS_TOKEN }}"
                 -var="access_secret=${{ secrets.STAGING_ACCESS_SECRET }}"
                 -var="s3_access_key_id=${{ secrets.STAGING_S3_ACCESS_KEY_ID }}"
                 -var="s3_secret_access_key=${{ secrets.STAGING_S3_SECRET_ACCESS_KEY }}"'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
#
      - name: Bump version and push tag
        id: bump_version
        uses: mathieudutour/github-tag-action@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: changelog
        uses: scottbrenner/generate-changelog-action@master
        id: changelog
        env:
          REPO: ${{ github.repository }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v${{ steps.bump_version.outputs.new_tag }}
          release_name: Release v${{ steps.bump_version.outputs.new_tag }}
          body: |
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
